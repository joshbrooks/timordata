# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-08-31 14:28
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nhdb', '0001_initial'),
        ('geo', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='DonorAnnouncement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('title', models.CharField(max_length=256)),
                ('summary', models.TextField()),
                ('content', models.TextField()),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nhdb.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='DonorSurveyResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organizationname', models.TextField(blank=True, null=True)),
                ('survey_date', models.DateField(default=datetime.datetime.today)),
                ('response_date', models.DateField(blank=True, null=True)),
                ('response', models.CharField(choices=[('ND', 'No (works directly with local partners)'), ('NO', 'No (does not provide funding)'), ('Y', 'Funding is available'), ('L', 'Funding is not yet available'), ('W', 'Awaiting a response')], max_length=2)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nhdb.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='FundingOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Put in the title', max_length=256)),
                ('description', models.TextField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('conditions', models.TextField(blank=True, null=True)),
                ('application_end_date', models.DateField(blank=True, null=True)),
                ('all_districts', models.BooleanField(default=False)),
                ('activity', models.ManyToManyField(blank=True, related_name='fundingoffer_activity', to='nhdb.PropertyTag')),
                ('beneficiary', models.ManyToManyField(blank=True, related_name='fundingoffer_beneficiary', to='nhdb.PropertyTag')),
                ('district', models.ManyToManyField(blank=True, to='geo.District')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhdb.Organization')),
                ('sector', models.ManyToManyField(blank=True, related_name='fundingoffer_sector', to='nhdb.PropertyTag')),
            ],
        ),
        migrations.CreateModel(
            name='FundingOfferDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, max_length=256, null=True, upload_to='publications')),
                ('description', models.CharField(max_length=128)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='donormapping.FundingOffer')),
            ],
        ),
        migrations.CreateModel(
            name='FundingSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organizationname', models.CharField(max_length=100)),
                ('fundinggiven', models.NullBooleanField(default=None, verbose_name='Has your organization given funding in the past year?')),
                ('fundinggiveamt', models.IntegerField(blank=True, null=True, verbose_name='How much (approximately) given in the past year?')),
                ('fundingreceived', models.NullBooleanField(default=None, verbose_name='Has your organization received funding in the past year?')),
                ('fundingrecvamt', models.IntegerField(blank=True, null=True, verbose_name='How much (approximately) received in the past year?')),
                ('fundinggivemethod', models.CharField(blank=True, max_length=128, verbose_name='If other, please write:')),
                ('fundingrecvmethod', models.CharField(blank=True, help_text='e.g. Television Advertising, Radio, Newspapers', max_length=128, null=True, verbose_name='If other, please write:')),
                ('qfunding', models.IntegerField(blank=True, choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')], null=True, verbose_name='Donor funding is difficult to find')),
                ('qrecipients', models.IntegerField(blank=True, choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')], null=True, verbose_name='Recipient organisations are hard to find')),
                ('qtransport', models.IntegerField(blank=True, choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')], null=True, verbose_name='Receiving funds is difficult because of transport problems')),
                ('qprocess', models.IntegerField(blank=True, choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')], null=True, verbose_name='Applying for funds is very difficult because the process is complicated')),
                ('qdonorsector', models.IntegerField(blank=True, choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')], null=True, verbose_name='Donor funding is hard to find for the sectors this organization works in')),
                ('usefacebook', models.CharField(choices=[('D', 'Every Day'), ('W', 'Once per week'), ('F', 'Once per 2 weeks (fortnightly)'), ('M', 'Once per month'), ('N', 'Less than once per month (or never)')], max_length=2, verbose_name='How often do you use Facebook?')),
                ('usegmail', models.CharField(choices=[('D', 'Every Day'), ('W', 'Once per week'), ('F', 'Once per 2 weeks (fortnightly)'), ('M', 'Once per month'), ('N', 'Less than once per month (or never)')], max_length=2, verbose_name='How often do you use Gmail?')),
                ('usegoogle', models.CharField(choices=[('D', 'Every Day'), ('W', 'Once per week'), ('F', 'Once per 2 weeks (fortnightly)'), ('M', 'Once per month'), ('N', 'Less than once per month (or never)')], max_length=2, verbose_name='How often do you use Google Search?')),
                ('hascomputer', models.BooleanField(default=False, verbose_name='I have access to a computer')),
                ('hasprinter', models.BooleanField(default=False, verbose_name='I have access to a printer')),
                ('hasmobile', models.BooleanField(default=False, verbose_name='I have access to a basic mobile phone (calls and SMS) at work')),
                ('hassmartphone', models.BooleanField(default=False, verbose_name='I have access to a smartphone or tablet (with internet access)')),
            ],
        ),
        migrations.CreateModel(
            name='FundingSurveyInfoMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='fundingsurvey',
            name='fundinggiverel',
            field=models.ManyToManyField(blank=True, related_name='fundinggiverel', to='donormapping.FundingSurveyInfoMethods', verbose_name='How do you find your recipients?'),
        ),
        migrations.AddField(
            model_name='fundingsurvey',
            name='fundingrecvrel',
            field=models.ManyToManyField(blank=True, related_name='fundingrecvrel', to='donormapping.FundingSurveyInfoMethods', verbose_name='How do you find your donors?'),
        ),
        migrations.AddField(
            model_name='fundingsurvey',
            name='organizationtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhdb.OrganizationClass', verbose_name='Organization type'),
        ),
        migrations.AddField(
            model_name='fundingsurvey',
            name='properties',
            field=models.ManyToManyField(to='nhdb.PropertyTag', verbose_name='Properties'),
        ),
    ]
